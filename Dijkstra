#include <limits.h>
#include <stdbool.h> 
#include <stdio.h>

#define V 5

int menorDistancia(int dist[], bool sptSet[]) {

  int min = INT_MAX, min_index;
  for (int v = 0; v < V; v++) {
    if (!sptSet[v] && dist[v] <= min) {
      min = dist[v];
      min_index = v;
    }
  }
  return min_index;
}

void imprimirSolucao(int dist[]) {

  printf("Vértice \t Distância da Origem\n");
  for (int i = 0; i < V; i++)
    printf("%d \t %d\n", i, dist[i]);
}

void dijkstra(char grafo[V][V], int src) {

  int dist[V];
  bool sptSet[V];
  for (int i = 0; i < V; i++) {
    dist[i] = INT_MAX;
    sptSet[i] = false;
  }

  dist[src] = 0;

  for (int count = 0; count < V - 1; count++) {
    int u = menorDistancia(dist, sptSet);
    sptSet[u] = true;
    for (int v = 0; v < V; v++) {
      if (!sptSet[v] && grafo[u][v] && dist[u] != INT_MAX &&
          dist[u] + grafo[u][v] < dist[v]) {
        dist[v] = dist[u] + grafo[u][v];
      }
    }
  }

  imprimirSolucao(dist);
}

int main() {

  char grafo[V][V] = {{0, 5, 3, 2, 0},
                      {5, 0, 2, 0, 4},
                      {3, 2, 0, 1, 0},
                      {2, 0, 1, 0, 7},
                      {0, 4, 0, 7, 0}};

  dijkstra(grafo, 0);

  return 0;
}
